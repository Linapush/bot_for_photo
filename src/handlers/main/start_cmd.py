import asyncio
from src.state.login import LoginState
from aiogram import types
from aiogram.filters.command import CommandStart
from aiogram.fsm.context import FSMContext

from src.handlers.main.router import main_router
from src.logger import logger
from src.handlers.main.save_and_create_code import get_or_create_unique_code


@main_router.message(CommandStart())
async def cmd_start(message: types.Message, state: FSMContext) -> None:
    user_id = message.from_user.id
    username = message.from_user.username
    logger.info('Start cmd')
    logger.info('User: %s, %s start bot', user_id, username)


    welcome_message = (
        '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≠—Ç–æ –±–æ—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n\n'
        '–° –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏—Ö –∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.\n\n'
        '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ üëá'
    )

    unique_code = await get_or_create_unique_code(user_id)

    await message.answer(welcome_message)
    await asyncio.sleep(0.3)
    await message.answer('–ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–¥, –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ.\n'
                        f'–ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —ç—Ç–∏–º: {unique_code}')
    await asyncio.sleep(0.3)
    await state.set_state(LoginState.enter_code)